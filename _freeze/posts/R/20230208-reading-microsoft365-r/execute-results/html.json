{
  "hash": "4f84caab9427f1ff92d6ca5524479fbb",
  "result": {
    "markdown": "---\ntitle: \"Reading OneDrive and SharePoint files with read365 R package\"\nauthor: \"Artur Quirino\"\ndate: \"2023-02-08\"\ndate-modified: \"2023-02-20\"\n---\n\n\nIn this post, I would like to introduce four functions available in the `read365`\npackage that allow for the reading of OneDrive and SharePoint files: `OneDrive_file`,\n`SharePoint_file`, `OneDrive_shared_file` and `SharePoint_shared_file`. \nThe former two functions are intended for private content, while the last two are \ndesigned for public files. It is worth noting that `read365` is heavily reliant on the \n`Microsoft365R` package.\n\nThe goal of the `read365` package is to allow users to read files from office365 \ndirectly in R, without the need to sync files between their computer and the cloud.\n\n## Reading private content from OneDrive\n\nThe `OneDrive_file` function executes the login process onto OneDrive by \nutilizing Azure Active Directory authentication. Upon successful authentication, \n`OneDrive_file` requires users to set three parameters: the location of the file (`file`),\nthe desired function for reading the file (`.function`), and optionally, arguments for this function (`...`). \nSee the example below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#remotes::install_github(\"arturhgq/read365\")\nread365::OneDrive_file(\n  \"CienciaPolitica/data/read365_examples/OneDrive_file.xlsx\",\n  readxl::read_excel, \n  sheet = 1\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading Microsoft Graph login for default tenant\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAccess token has expired or is no longer valid; refreshing\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n   col1  col2 `private content`\n  <dbl> <dbl> <chr>            \n1     1     2 TRUE             \n2     3     4 TRUE             \n3     5     6 TRUE             \n```\n:::\n:::\n\n\n## Reading private content from SharePoint\n\nShortly, the usage of the `SharePoint_file` is similiar to `OneDrive_file`. \nHowever, there are two additional parameters that must be set: `SharePoint` \nand `drive`. In the `SharePoint` parameter, the user is required to specify the \nSharePoint URL where the target file is located. As SharePoint may contain multiple \ndrives to store files, users must indicate the specific `drive`[^1] to be accessed too.\nIn most cases, \"Documents\" is the primary drive for storing files in SharePoint.\n\n[^1]: In case the appropriate drive is unknown, a list of drives can be obtained by \nutilizing the `read365::get_drives` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread365::SharePoint_file(\n  SharePoint = \"https://arturhgq.sharepoint.com\",\n  drive = \"Documentos\",\n  file = \"Sharepoint_file.xlsx\",\n  .function = readxl::read_excel\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading Microsoft Graph login for default tenant\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAccess token has expired or is no longer valid; refreshing\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n   col1  col2 `private content` SharePoint\n  <dbl> <dbl> <chr>             <chr>     \n1     1     2 TRUE              TRUE      \n2     3     4 TRUE              TRUE      \n3     5     6 TRUE              TRUE      \n```\n:::\n:::\n\n\n## Reading public content from OneDrive or SharePoint\n \nTo use `OneDrive_shared_file` or `SharePoint_shared_file`[^2] no authentication is required. Therefore, all that is\nneeded is to provide the file's URL along with the corresponding function for reading \nthe file and, optionally, its respective parameters.\n\n[^2]: Internally, both functions are identical.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n url_OneDrive = 'https://arturhgq-my.sharepoint.com/:x:/p/contact/EZ_KJ3cqtIVEh4PdXhTGy7IBpWT5_Zlp2VjYwlgVCPK4oQ?e=UZGQZt'\n url_SharePoint = 'https://arturhgq.sharepoint.com/:x:/g/EZOMb55WRsZFhXuo5K8uGXYBaRdGPNhX7lFNDjLpphj-mw?e=nCm0L4'\n \n read365::OneDrive_shared_file(\n    url_OneDrive,\n    .function = readxl::read_excel,\n    sheet = 1\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n   col1  col2\n  <dbl> <dbl>\n1     1     2\n2     3     4\n3     5     6\n```\n:::\n\n```{.r .cell-code}\n  read365::SharePoint_shared_file(\n    url_SharePoint,\n    .function = readxl::read_excel,\n    sheet = 1\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n   col1  col2 `private content` SharePoint\n  <dbl> <dbl> <chr>             <chr>     \n1     1     2 TRUE              TRUE      \n2     3     4 TRUE              TRUE      \n3     5     6 TRUE              TRUE      \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}